ARM GAS  /tmp/ccujqZjS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_USART1_UART_Init:
  25              	.LFB65:
  26              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** #include <string.h>
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** char rxBuffer[RX_BUFFER_SIZE];
  26:Core/Src/usart.c **** char txBuffer[TX_BUFFER_SIZE];
  27:Core/Src/usart.c **** uint8_t data;
  28:Core/Src/usart.c **** uint8_t rxDataCount = 0;
  29:Core/Src/usart.c **** /* USER CODE END 0 */
  30:Core/Src/usart.c **** 
  31:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  32:Core/Src/usart.c **** 
ARM GAS  /tmp/ccujqZjS.s 			page 2


  33:Core/Src/usart.c **** /* USART1 init function */
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  36:Core/Src/usart.c **** {
  27              		.loc 1 36 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  41:Core/Src/usart.c **** 
  42:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  43:Core/Src/usart.c **** 
  44:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  45:Core/Src/usart.c ****   huart1.Instance = USART1;
  36              		.loc 1 45 3 view .LVU1
  37              		.loc 1 45 19 is_stmt 0 view .LVU2
  38 0002 0D48     		ldr	r0, .L5
  39 0004 0D4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  46:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  41              		.loc 1 46 3 is_stmt 1 view .LVU3
  42              		.loc 1 46 24 is_stmt 0 view .LVU4
  43 0008 4FF4E133 		mov	r3, #115200
  44 000c 4360     		str	r3, [r0, #4]
  47:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  45              		.loc 1 47 3 is_stmt 1 view .LVU5
  46              		.loc 1 47 26 is_stmt 0 view .LVU6
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  48:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 48 3 is_stmt 1 view .LVU7
  50              		.loc 1 48 24 is_stmt 0 view .LVU8
  51 0012 C360     		str	r3, [r0, #12]
  49:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  52              		.loc 1 49 3 is_stmt 1 view .LVU9
  53              		.loc 1 49 22 is_stmt 0 view .LVU10
  54 0014 0361     		str	r3, [r0, #16]
  50:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  55              		.loc 1 50 3 is_stmt 1 view .LVU11
  56              		.loc 1 50 20 is_stmt 0 view .LVU12
  57 0016 0C22     		movs	r2, #12
  58 0018 4261     		str	r2, [r0, #20]
  51:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  59              		.loc 1 51 3 is_stmt 1 view .LVU13
  60              		.loc 1 51 25 is_stmt 0 view .LVU14
  61 001a 8361     		str	r3, [r0, #24]
  52:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  62              		.loc 1 52 3 is_stmt 1 view .LVU15
  63              		.loc 1 52 28 is_stmt 0 view .LVU16
ARM GAS  /tmp/ccujqZjS.s 			page 3


  64 001c C361     		str	r3, [r0, #28]
  53:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  65              		.loc 1 53 3 is_stmt 1 view .LVU17
  66              		.loc 1 53 7 is_stmt 0 view .LVU18
  67 001e FFF7FEFF 		bl	HAL_UART_Init
  68              	.LVL0:
  69              		.loc 1 53 6 view .LVU19
  70 0022 28B9     		cbnz	r0, .L4
  71              	.L2:
  54:Core/Src/usart.c ****   {
  55:Core/Src/usart.c ****     Error_Handler();
  56:Core/Src/usart.c ****   }
  57:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  58:Core/Src/usart.c ****   HAL_UART_Receive_IT(&huart1, &data, 1u);
  72              		.loc 1 58 3 is_stmt 1 view .LVU20
  73 0024 0122     		movs	r2, #1
  74 0026 0649     		ldr	r1, .L5+8
  75 0028 0348     		ldr	r0, .L5
  76 002a FFF7FEFF 		bl	HAL_UART_Receive_IT
  77              	.LVL1:
  59:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  60:Core/Src/usart.c **** }
  78              		.loc 1 60 1 is_stmt 0 view .LVU21
  79 002e 08BD     		pop	{r3, pc}
  80              	.L4:
  55:Core/Src/usart.c ****   }
  81              		.loc 1 55 5 is_stmt 1 view .LVU22
  82 0030 FFF7FEFF 		bl	Error_Handler
  83              	.LVL2:
  84 0034 F6E7     		b	.L2
  85              	.L6:
  86 0036 00BF     		.align	2
  87              	.L5:
  88 0038 00000000 		.word	huart1
  89 003c 00380140 		.word	1073821696
  90 0040 00000000 		.word	data
  91              		.cfi_endproc
  92              	.LFE65:
  94              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  95              		.align	1
  96              		.global	HAL_UART_MspInit
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu softvfp
 102              	HAL_UART_MspInit:
 103              	.LVL3:
 104              	.LFB66:
  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  63:Core/Src/usart.c **** {
 105              		.loc 1 63 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 24
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 63 1 is_stmt 0 view .LVU24
 110 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccujqZjS.s 			page 4


 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 5, -8
 115              		.cfi_offset 14, -4
 116 0002 87B0     		sub	sp, sp, #28
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 40
  64:Core/Src/usart.c **** 
  65:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 119              		.loc 1 65 3 is_stmt 1 view .LVU25
 120              		.loc 1 65 20 is_stmt 0 view .LVU26
 121 0004 0023     		movs	r3, #0
 122 0006 0293     		str	r3, [sp, #8]
 123 0008 0393     		str	r3, [sp, #12]
 124 000a 0493     		str	r3, [sp, #16]
 125 000c 0593     		str	r3, [sp, #20]
  66:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 126              		.loc 1 66 3 is_stmt 1 view .LVU27
 127              		.loc 1 66 16 is_stmt 0 view .LVU28
 128 000e 0268     		ldr	r2, [r0]
 129              		.loc 1 66 5 view .LVU29
 130 0010 1B4B     		ldr	r3, .L11
 131 0012 9A42     		cmp	r2, r3
 132 0014 01D0     		beq	.L10
 133              	.LVL4:
 134              	.L7:
  67:Core/Src/usart.c ****   {
  68:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  69:Core/Src/usart.c **** 
  70:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  71:Core/Src/usart.c ****     /* USART1 clock enable */
  72:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  75:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  76:Core/Src/usart.c ****     PA9     ------> USART1_TX
  77:Core/Src/usart.c ****     PA10     ------> USART1_RX
  78:Core/Src/usart.c ****     */
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  82:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  83:Core/Src/usart.c **** 
  84:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
  85:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  86:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  87:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  88:Core/Src/usart.c **** 
  89:Core/Src/usart.c ****     /* USART1 interrupt Init */
  90:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
  91:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
  92:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
  93:Core/Src/usart.c **** 
  94:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
  95:Core/Src/usart.c ****   }
  96:Core/Src/usart.c **** }
ARM GAS  /tmp/ccujqZjS.s 			page 5


 135              		.loc 1 96 1 view .LVU30
 136 0016 07B0     		add	sp, sp, #28
 137              	.LCFI3:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 12
 140              		@ sp needed
 141 0018 30BD     		pop	{r4, r5, pc}
 142              	.LVL5:
 143              	.L10:
 144              	.LCFI4:
 145              		.cfi_restore_state
  72:Core/Src/usart.c **** 
 146              		.loc 1 72 5 is_stmt 1 view .LVU31
 147              	.LBB2:
  72:Core/Src/usart.c **** 
 148              		.loc 1 72 5 view .LVU32
  72:Core/Src/usart.c **** 
 149              		.loc 1 72 5 view .LVU33
 150 001a 03F55843 		add	r3, r3, #55296
 151 001e 9A69     		ldr	r2, [r3, #24]
 152 0020 42F48042 		orr	r2, r2, #16384
 153 0024 9A61     		str	r2, [r3, #24]
  72:Core/Src/usart.c **** 
 154              		.loc 1 72 5 view .LVU34
 155 0026 9A69     		ldr	r2, [r3, #24]
 156 0028 02F48042 		and	r2, r2, #16384
 157 002c 0092     		str	r2, [sp]
  72:Core/Src/usart.c **** 
 158              		.loc 1 72 5 view .LVU35
 159 002e 009A     		ldr	r2, [sp]
 160              	.LBE2:
  72:Core/Src/usart.c **** 
 161              		.loc 1 72 5 view .LVU36
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 162              		.loc 1 74 5 view .LVU37
 163              	.LBB3:
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 164              		.loc 1 74 5 view .LVU38
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 165              		.loc 1 74 5 view .LVU39
 166 0030 9A69     		ldr	r2, [r3, #24]
 167 0032 42F00402 		orr	r2, r2, #4
 168 0036 9A61     		str	r2, [r3, #24]
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 169              		.loc 1 74 5 view .LVU40
 170 0038 9B69     		ldr	r3, [r3, #24]
 171 003a 03F00403 		and	r3, r3, #4
 172 003e 0193     		str	r3, [sp, #4]
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 173              		.loc 1 74 5 view .LVU41
 174 0040 019B     		ldr	r3, [sp, #4]
 175              	.LBE3:
  74:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 176              		.loc 1 74 5 view .LVU42
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 177              		.loc 1 79 5 view .LVU43
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccujqZjS.s 			page 6


 178              		.loc 1 79 25 is_stmt 0 view .LVU44
 179 0042 4FF40073 		mov	r3, #512
 180 0046 0293     		str	r3, [sp, #8]
  80:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 181              		.loc 1 80 5 is_stmt 1 view .LVU45
  80:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 182              		.loc 1 80 26 is_stmt 0 view .LVU46
 183 0048 0223     		movs	r3, #2
 184 004a 0393     		str	r3, [sp, #12]
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 185              		.loc 1 81 5 is_stmt 1 view .LVU47
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 186              		.loc 1 81 27 is_stmt 0 view .LVU48
 187 004c 0323     		movs	r3, #3
 188 004e 0593     		str	r3, [sp, #20]
  82:Core/Src/usart.c **** 
 189              		.loc 1 82 5 is_stmt 1 view .LVU49
 190 0050 0C4D     		ldr	r5, .L11+4
 191 0052 02A9     		add	r1, sp, #8
 192 0054 2846     		mov	r0, r5
 193              	.LVL6:
  82:Core/Src/usart.c **** 
 194              		.loc 1 82 5 is_stmt 0 view .LVU50
 195 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL7:
  84:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 197              		.loc 1 84 5 is_stmt 1 view .LVU51
  84:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 198              		.loc 1 84 25 is_stmt 0 view .LVU52
 199 005a 4FF48063 		mov	r3, #1024
 200 005e 0293     		str	r3, [sp, #8]
  85:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 201              		.loc 1 85 5 is_stmt 1 view .LVU53
  85:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 202              		.loc 1 85 26 is_stmt 0 view .LVU54
 203 0060 0024     		movs	r4, #0
 204 0062 0394     		str	r4, [sp, #12]
  86:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 205              		.loc 1 86 5 is_stmt 1 view .LVU55
  86:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 206              		.loc 1 86 26 is_stmt 0 view .LVU56
 207 0064 0494     		str	r4, [sp, #16]
  87:Core/Src/usart.c **** 
 208              		.loc 1 87 5 is_stmt 1 view .LVU57
 209 0066 02A9     		add	r1, sp, #8
 210 0068 2846     		mov	r0, r5
 211 006a FFF7FEFF 		bl	HAL_GPIO_Init
 212              	.LVL8:
  90:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 213              		.loc 1 90 5 view .LVU58
 214 006e 2246     		mov	r2, r4
 215 0070 2146     		mov	r1, r4
 216 0072 2520     		movs	r0, #37
 217 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 218              	.LVL9:
  91:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 219              		.loc 1 91 5 view .LVU59
ARM GAS  /tmp/ccujqZjS.s 			page 7


 220 0078 2520     		movs	r0, #37
 221 007a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 222              	.LVL10:
 223              		.loc 1 96 1 is_stmt 0 view .LVU60
 224 007e CAE7     		b	.L7
 225              	.L12:
 226              		.align	2
 227              	.L11:
 228 0080 00380140 		.word	1073821696
 229 0084 00080140 		.word	1073809408
 230              		.cfi_endproc
 231              	.LFE66:
 233              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_UART_MspDeInit
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu softvfp
 241              	HAL_UART_MspDeInit:
 242              	.LVL11:
 243              	.LFB67:
  97:Core/Src/usart.c **** 
  98:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  99:Core/Src/usart.c **** {
 244              		.loc 1 99 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		.loc 1 99 1 is_stmt 0 view .LVU62
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI5:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 254              		.loc 1 101 3 is_stmt 1 view .LVU63
 255              		.loc 1 101 16 is_stmt 0 view .LVU64
 256 0002 0268     		ldr	r2, [r0]
 257              		.loc 1 101 5 view .LVU65
 258 0004 084B     		ldr	r3, .L17
 259 0006 9A42     		cmp	r2, r3
 260 0008 00D0     		beq	.L16
 261              	.LVL12:
 262              	.L13:
 102:Core/Src/usart.c ****   {
 103:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 104:Core/Src/usart.c **** 
 105:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 106:Core/Src/usart.c ****     /* Peripheral clock disable */
 107:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 110:Core/Src/usart.c ****     PA9     ------> USART1_TX
 111:Core/Src/usart.c ****     PA10     ------> USART1_RX
 112:Core/Src/usart.c ****     */
ARM GAS  /tmp/ccujqZjS.s 			page 8


 113:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 116:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 117:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 118:Core/Src/usart.c **** 
 119:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 120:Core/Src/usart.c ****   }
 121:Core/Src/usart.c **** }
 263              		.loc 1 121 1 view .LVU66
 264 000a 08BD     		pop	{r3, pc}
 265              	.LVL13:
 266              	.L16:
 107:Core/Src/usart.c **** 
 267              		.loc 1 107 5 is_stmt 1 view .LVU67
 268 000c 074A     		ldr	r2, .L17+4
 269 000e 9369     		ldr	r3, [r2, #24]
 270 0010 23F48043 		bic	r3, r3, #16384
 271 0014 9361     		str	r3, [r2, #24]
 113:Core/Src/usart.c **** 
 272              		.loc 1 113 5 view .LVU68
 273 0016 4FF4C061 		mov	r1, #1536
 274 001a 0548     		ldr	r0, .L17+8
 275              	.LVL14:
 113:Core/Src/usart.c **** 
 276              		.loc 1 113 5 is_stmt 0 view .LVU69
 277 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 278              	.LVL15:
 116:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 279              		.loc 1 116 5 is_stmt 1 view .LVU70
 280 0020 2520     		movs	r0, #37
 281 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 282              	.LVL16:
 283              		.loc 1 121 1 is_stmt 0 view .LVU71
 284 0026 F0E7     		b	.L13
 285              	.L18:
 286              		.align	2
 287              	.L17:
 288 0028 00380140 		.word	1073821696
 289 002c 00100240 		.word	1073876992
 290 0030 00080140 		.word	1073809408
 291              		.cfi_endproc
 292              	.LFE67:
 294              		.section	.rodata.sendDataLine.str1.4,"aMS",%progbits,1
 295              		.align	2
 296              	.LC0:
 297 0000 0A00     		.ascii	"\012\000"
 298              		.section	.text.sendDataLine,"ax",%progbits
 299              		.align	1
 300              		.global	sendDataLine
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu softvfp
 306              	sendDataLine:
 307              	.LVL17:
 308              	.LFB68:
ARM GAS  /tmp/ccujqZjS.s 			page 9


 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c **** /* USER CODE BEGIN 1 */
 124:Core/Src/usart.c **** uint16_t sendDataLine(const char *data) {
 309              		.loc 1 124 41 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		.loc 1 124 41 is_stmt 0 view .LVU73
 314 0000 38B5     		push	{r3, r4, r5, lr}
 315              	.LCFI6:
 316              		.cfi_def_cfa_offset 16
 317              		.cfi_offset 3, -16
 318              		.cfi_offset 4, -12
 319              		.cfi_offset 5, -8
 320              		.cfi_offset 14, -4
 321 0002 0546     		mov	r5, r0
 125:Core/Src/usart.c ****   memset(txBuffer, 0x00, sizeof(txBuffer));
 322              		.loc 1 125 3 is_stmt 1 view .LVU74
 323 0004 114C     		ldr	r4, .L22
 324 0006 4FF48072 		mov	r2, #256
 325 000a 0021     		movs	r1, #0
 326 000c 2046     		mov	r0, r4
 327              	.LVL18:
 328              		.loc 1 125 3 is_stmt 0 view .LVU75
 329 000e FFF7FEFF 		bl	memset
 330              	.LVL19:
 126:Core/Src/usart.c ****   strcat(txBuffer, data);
 331              		.loc 1 126 3 is_stmt 1 view .LVU76
 332 0012 2946     		mov	r1, r5
 333 0014 2046     		mov	r0, r4
 334 0016 FFF7FEFF 		bl	strcat
 335              	.LVL20:
 127:Core/Src/usart.c ****   strcat(txBuffer, "\n");
 336              		.loc 1 127 3 view .LVU77
 337 001a 2046     		mov	r0, r4
 338 001c FFF7FEFF 		bl	strlen
 339              	.LVL21:
 340 0020 0B4B     		ldr	r3, .L22+4
 341 0022 1B88     		ldrh	r3, [r3]	@ unaligned
 342 0024 2352     		strh	r3, [r4, r0]	@ unaligned
 128:Core/Src/usart.c ****   uint16_t len = strlen(txBuffer);
 343              		.loc 1 128 3 view .LVU78
 344              		.loc 1 128 18 is_stmt 0 view .LVU79
 345 0026 2046     		mov	r0, r4
 346 0028 FFF7FEFF 		bl	strlen
 347              	.LVL22:
 348              		.loc 1 128 12 view .LVU80
 349 002c 85B2     		uxth	r5, r0
 350              	.LVL23:
 129:Core/Src/usart.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)txBuffer, len, 0xffff);
 351              		.loc 1 129 3 is_stmt 1 view .LVU81
 352 002e 4FF6FF73 		movw	r3, #65535
 353 0032 2A46     		mov	r2, r5
 354 0034 2146     		mov	r1, r4
 355 0036 0748     		ldr	r0, .L22+8
 356 0038 FFF7FEFF 		bl	HAL_UART_Transmit
 357              	.LVL24:
ARM GAS  /tmp/ccujqZjS.s 			page 10


 130:Core/Src/usart.c ****   while (HAL_UART_GetState(&huart1) == HAL_UART_STATE_BUSY_TX);
 358              		.loc 1 130 3 view .LVU82
 359              	.L20:
 360              		.loc 1 130 63 discriminator 1 view .LVU83
 361              		.loc 1 130 9 discriminator 1 view .LVU84
 362              		.loc 1 130 10 is_stmt 0 discriminator 1 view .LVU85
 363 003c 0548     		ldr	r0, .L22+8
 364 003e FFF7FEFF 		bl	HAL_UART_GetState
 365              	.LVL25:
 366              		.loc 1 130 9 discriminator 1 view .LVU86
 367 0042 2128     		cmp	r0, #33
 368 0044 FAD0     		beq	.L20
 131:Core/Src/usart.c ****   return len;
 369              		.loc 1 131 3 is_stmt 1 view .LVU87
 132:Core/Src/usart.c **** }
 370              		.loc 1 132 1 is_stmt 0 view .LVU88
 371 0046 2846     		mov	r0, r5
 372 0048 38BD     		pop	{r3, r4, r5, pc}
 373              	.LVL26:
 374              	.L23:
 375              		.loc 1 132 1 view .LVU89
 376 004a 00BF     		.align	2
 377              	.L22:
 378 004c 00000000 		.word	txBuffer
 379 0050 00000000 		.word	.LC0
 380 0054 00000000 		.word	huart1
 381              		.cfi_endproc
 382              	.LFE68:
 384              		.section	.text.sendData,"ax",%progbits
 385              		.align	1
 386              		.global	sendData
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu softvfp
 392              	sendData:
 393              	.LVL27:
 394              	.LFB69:
 133:Core/Src/usart.c **** 
 134:Core/Src/usart.c **** uint16_t sendData(const char *data) {
 395              		.loc 1 134 37 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		.loc 1 134 37 is_stmt 0 view .LVU91
 400 0000 38B5     		push	{r3, r4, r5, lr}
 401              	.LCFI7:
 402              		.cfi_def_cfa_offset 16
 403              		.cfi_offset 3, -16
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 5, -8
 406              		.cfi_offset 14, -4
 407 0002 0546     		mov	r5, r0
 135:Core/Src/usart.c ****   uint16_t len = strlen(data);
 408              		.loc 1 135 3 is_stmt 1 view .LVU92
 409              		.loc 1 135 18 is_stmt 0 view .LVU93
 410 0004 FFF7FEFF 		bl	strlen
ARM GAS  /tmp/ccujqZjS.s 			page 11


 411              	.LVL28:
 412              		.loc 1 135 12 view .LVU94
 413 0008 84B2     		uxth	r4, r0
 414              	.LVL29:
 136:Core/Src/usart.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)data, len, 0xffff);
 415              		.loc 1 136 3 is_stmt 1 view .LVU95
 416 000a 4FF6FF73 		movw	r3, #65535
 417 000e 2246     		mov	r2, r4
 418 0010 2946     		mov	r1, r5
 419 0012 0548     		ldr	r0, .L27
 420 0014 FFF7FEFF 		bl	HAL_UART_Transmit
 421              	.LVL30:
 137:Core/Src/usart.c ****   while (HAL_UART_GetState(&huart1) == HAL_UART_STATE_BUSY_TX);
 422              		.loc 1 137 3 view .LVU96
 423              	.L25:
 424              		.loc 1 137 63 discriminator 1 view .LVU97
 425              		.loc 1 137 9 discriminator 1 view .LVU98
 426              		.loc 1 137 10 is_stmt 0 discriminator 1 view .LVU99
 427 0018 0348     		ldr	r0, .L27
 428 001a FFF7FEFF 		bl	HAL_UART_GetState
 429              	.LVL31:
 430              		.loc 1 137 9 discriminator 1 view .LVU100
 431 001e 2128     		cmp	r0, #33
 432 0020 FAD0     		beq	.L25
 138:Core/Src/usart.c ****   return len;
 433              		.loc 1 138 3 is_stmt 1 view .LVU101
 139:Core/Src/usart.c **** }
 434              		.loc 1 139 1 is_stmt 0 view .LVU102
 435 0022 2046     		mov	r0, r4
 436 0024 38BD     		pop	{r3, r4, r5, pc}
 437              	.LVL32:
 438              	.L28:
 439              		.loc 1 139 1 view .LVU103
 440 0026 00BF     		.align	2
 441              	.L27:
 442 0028 00000000 		.word	huart1
 443              		.cfi_endproc
 444              	.LFE69:
 446              		.section	.rodata.setBluetooth.str1.4,"aMS",%progbits,1
 447              		.align	2
 448              	.LC1:
 449 0000 41542B50 		.ascii	"AT+PSWD=1234\000"
 449      5357443D 
 449      31323334 
 449      00
 450 000d 000000   		.align	2
 451              	.LC2:
 452 0010 41542B55 		.ascii	"AT+UART=115200,0,0\000"
 452      4152543D 
 452      31313532 
 452      30302C30 
 452      2C3000
 453              		.section	.text.setBluetooth,"ax",%progbits
 454              		.align	1
 455              		.global	setBluetooth
 456              		.syntax unified
 457              		.thumb
ARM GAS  /tmp/ccujqZjS.s 			page 12


 458              		.thumb_func
 459              		.fpu softvfp
 461              	setBluetooth:
 462              	.LFB70:
 140:Core/Src/usart.c **** 
 141:Core/Src/usart.c **** void setBluetooth() {
 463              		.loc 1 141 21 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467 0000 08B5     		push	{r3, lr}
 468              	.LCFI8:
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 3, -8
 471              		.cfi_offset 14, -4
 142:Core/Src/usart.c ****   sendDataLine("AT+PSWD=1234");
 472              		.loc 1 142 3 view .LVU105
 473 0002 0748     		ldr	r0, .L31
 474 0004 FFF7FEFF 		bl	sendDataLine
 475              	.LVL33:
 143:Core/Src/usart.c ****   HAL_Delay(1000);
 476              		.loc 1 143 3 view .LVU106
 477 0008 4FF47A70 		mov	r0, #1000
 478 000c FFF7FEFF 		bl	HAL_Delay
 479              	.LVL34:
 144:Core/Src/usart.c ****   sendDataLine("AT+UART=115200,0,0");
 480              		.loc 1 144 3 view .LVU107
 481 0010 0448     		ldr	r0, .L31+4
 482 0012 FFF7FEFF 		bl	sendDataLine
 483              	.LVL35:
 145:Core/Src/usart.c ****   HAL_Delay(1000);
 484              		.loc 1 145 3 view .LVU108
 485 0016 4FF47A70 		mov	r0, #1000
 486 001a FFF7FEFF 		bl	HAL_Delay
 487              	.LVL36:
 146:Core/Src/usart.c **** }
 488              		.loc 1 146 1 is_stmt 0 view .LVU109
 489 001e 08BD     		pop	{r3, pc}
 490              	.L32:
 491              		.align	2
 492              	.L31:
 493 0020 00000000 		.word	.LC1
 494 0024 10000000 		.word	.LC2
 495              		.cfi_endproc
 496              	.LFE70:
 498              		.comm	huart1,68,4
 499              		.global	rxDataCount
 500              		.comm	data,1,1
 501              		.comm	txBuffer,256,4
 502              		.comm	rxBuffer,256,4
 503              		.section	.bss.rxDataCount,"aw",%nobits
 506              	rxDataCount:
 507 0000 00       		.space	1
 508              		.text
 509              	.Letext0:
 510              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 511              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccujqZjS.s 			page 13


 512              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 513              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 514              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 515              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 516              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 517              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 518              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 519              		.file 11 "Core/Inc/usart.h"
 520              		.file 12 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 521              		.file 13 "/usr/include/newlib/sys/_types.h"
 522              		.file 14 "/usr/include/newlib/sys/reent.h"
 523              		.file 15 "/usr/include/newlib/sys/lock.h"
 524              		.file 16 "/usr/include/newlib/string.h"
 525              		.file 17 "<built-in>"
 526              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 527              		.file 19 "Core/Inc/main.h"
ARM GAS  /tmp/ccujqZjS.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccujqZjS.s:16     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccujqZjS.s:24     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccujqZjS.s:88     .text.MX_USART1_UART_Init:0000000000000038 $d
                            *COM*:0000000000000044 huart1
                            *COM*:0000000000000001 data
     /tmp/ccujqZjS.s:95     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccujqZjS.s:102    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccujqZjS.s:228    .text.HAL_UART_MspInit:0000000000000080 $d
     /tmp/ccujqZjS.s:234    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccujqZjS.s:241    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccujqZjS.s:288    .text.HAL_UART_MspDeInit:0000000000000028 $d
     /tmp/ccujqZjS.s:295    .rodata.sendDataLine.str1.4:0000000000000000 $d
     /tmp/ccujqZjS.s:299    .text.sendDataLine:0000000000000000 $t
     /tmp/ccujqZjS.s:306    .text.sendDataLine:0000000000000000 sendDataLine
     /tmp/ccujqZjS.s:378    .text.sendDataLine:000000000000004c $d
                            *COM*:0000000000000100 txBuffer
     /tmp/ccujqZjS.s:385    .text.sendData:0000000000000000 $t
     /tmp/ccujqZjS.s:392    .text.sendData:0000000000000000 sendData
     /tmp/ccujqZjS.s:442    .text.sendData:0000000000000028 $d
     /tmp/ccujqZjS.s:447    .rodata.setBluetooth.str1.4:0000000000000000 $d
     /tmp/ccujqZjS.s:454    .text.setBluetooth:0000000000000000 $t
     /tmp/ccujqZjS.s:461    .text.setBluetooth:0000000000000000 setBluetooth
     /tmp/ccujqZjS.s:493    .text.setBluetooth:0000000000000020 $d
     /tmp/ccujqZjS.s:506    .bss.rxDataCount:0000000000000000 rxDataCount
                            *COM*:0000000000000100 rxBuffer
     /tmp/ccujqZjS.s:507    .bss.rxDataCount:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_UART_Receive_IT
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
memset
strcat
strlen
HAL_UART_Transmit
HAL_UART_GetState
HAL_Delay
