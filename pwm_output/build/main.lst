ARM GAS  /tmp/ccLRNwCz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB68:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccLRNwCz.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** static void MX_TIM4_Init(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
  88:Core/Src/main.c ****   MX_GPIO_Init();
  89:Core/Src/main.c ****   MX_TIM4_Init();
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccLRNwCz.s 			page 3


  91:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
  92:Core/Src/main.c ****   /* USER CODE END 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Infinite loop */
  95:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  96:Core/Src/main.c ****   while (1)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     /* USER CODE END WHILE */
  99:Core/Src/main.c ****     for (int i = 0; i < 500; ++ i) {
 100:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 101:Core/Src/main.c ****       HAL_Delay(1);
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     for (int i = 500; i >= 0; i -= 100) {
 105:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 106:Core/Src/main.c ****       HAL_Delay(200);
 107:Core/Src/main.c ****     }
 108:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 109:Core/Src/main.c ****   }
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 111:Core/Src/main.c **** }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief System Clock Configuration
 115:Core/Src/main.c ****   * @retval None
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** void SystemClock_Config(void)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 132:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     Error_Handler();
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 147:Core/Src/main.c ****   {
ARM GAS  /tmp/ccLRNwCz.s 			page 4


 148:Core/Src/main.c ****     Error_Handler();
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**
 153:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 154:Core/Src/main.c ****   * @param None
 155:Core/Src/main.c ****   * @retval None
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c **** static void MX_TIM4_Init(void)
 158:Core/Src/main.c **** {
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 165:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 166:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 171:Core/Src/main.c ****   htim4.Instance = TIM4;
 172:Core/Src/main.c ****   htim4.Init.Prescaler = 71;
 173:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 174:Core/Src/main.c ****   htim4.Init.Period = 499;
 175:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 176:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 177:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 182:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 191:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 192:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 197:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 198:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 199:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 200:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
 203:Core/Src/main.c ****   }
 204:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
ARM GAS  /tmp/ccLRNwCz.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 207:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim4);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief GPIO Initialization Function
 213:Core/Src/main.c ****   * @param None
 214:Core/Src/main.c ****   * @retval None
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c **** static void MX_GPIO_Init(void)
 217:Core/Src/main.c **** {
  26              		.loc 1 217 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 220:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 220 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 220 3 view .LVU2
  37              		.loc 1 220 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 220 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 220 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 220 3 view .LVU6
 221:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  50              		.loc 1 221 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 221 3 view .LVU8
  53              		.loc 1 221 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00802 		orr	r2, r2, #8
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 221 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00803 		and	r3, r3, #8
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 221 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 221 3 view .LVU12
 222:Core/Src/main.c **** 
ARM GAS  /tmp/ccLRNwCz.s 			page 6


 223:Core/Src/main.c **** }
  65              		.loc 1 223 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE68:
  78              		.section	.text.Error_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	Error_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	Error_Handler:
  87              	.LFB69:
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /* USER CODE END 4 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /**
 230:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 231:Core/Src/main.c ****   * @retval None
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c **** void Error_Handler(void)
 234:Core/Src/main.c **** {
  88              		.loc 1 234 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 235:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 236:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 237:Core/Src/main.c ****   __disable_irq();
  94              		.loc 1 237 3 view .LVU15
  95              	.LBB6:
  96              	.LBI6:
  97              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccLRNwCz.s 			page 7


  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  /tmp/ccLRNwCz.s 			page 8


  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  /tmp/ccLRNwCz.s 			page 9


 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  98              		.loc 2 140 27 view .LVU16
  99              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 100              		.loc 2 142 3 view .LVU17
 101              		.syntax unified
 102              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 103 0000 72B6     		cpsid i
 104              	@ 0 "" 2
 105              		.thumb
 106              		.syntax unified
 107              	.L6:
 108              	.LBE7:
 109              	.LBE6:
 238:Core/Src/main.c ****   while (1)
 110              		.loc 1 238 3 discriminator 1 view .LVU18
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****   }
 111              		.loc 1 240 3 discriminator 1 view .LVU19
 238:Core/Src/main.c ****   while (1)
 112              		.loc 1 238 9 discriminator 1 view .LVU20
 113 0002 FEE7     		b	.L6
 114              		.cfi_endproc
 115              	.LFE69:
 117              		.section	.text.MX_TIM4_Init,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	MX_TIM4_Init:
 125              	.LFB67:
 158:Core/Src/main.c **** 
 126              		.loc 1 158 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 56
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 00B5     		push	{lr}
 131              	.LCFI2:
 132              		.cfi_def_cfa_offset 4
 133              		.cfi_offset 14, -4
 134 0002 8FB0     		sub	sp, sp, #60
ARM GAS  /tmp/ccLRNwCz.s 			page 10


 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 64
 164:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 137              		.loc 1 164 3 view .LVU22
 164:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 138              		.loc 1 164 26 is_stmt 0 view .LVU23
 139 0004 0023     		movs	r3, #0
 140 0006 0A93     		str	r3, [sp, #40]
 141 0008 0B93     		str	r3, [sp, #44]
 142 000a 0C93     		str	r3, [sp, #48]
 143 000c 0D93     		str	r3, [sp, #52]
 165:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 144              		.loc 1 165 3 is_stmt 1 view .LVU24
 165:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 145              		.loc 1 165 27 is_stmt 0 view .LVU25
 146 000e 0893     		str	r3, [sp, #32]
 147 0010 0993     		str	r3, [sp, #36]
 166:Core/Src/main.c **** 
 148              		.loc 1 166 3 is_stmt 1 view .LVU26
 166:Core/Src/main.c **** 
 149              		.loc 1 166 22 is_stmt 0 view .LVU27
 150 0012 0193     		str	r3, [sp, #4]
 151 0014 0293     		str	r3, [sp, #8]
 152 0016 0393     		str	r3, [sp, #12]
 153 0018 0493     		str	r3, [sp, #16]
 154 001a 0593     		str	r3, [sp, #20]
 155 001c 0693     		str	r3, [sp, #24]
 156 001e 0793     		str	r3, [sp, #28]
 171:Core/Src/main.c ****   htim4.Init.Prescaler = 71;
 157              		.loc 1 171 3 is_stmt 1 view .LVU28
 171:Core/Src/main.c ****   htim4.Init.Prescaler = 71;
 158              		.loc 1 171 18 is_stmt 0 view .LVU29
 159 0020 1E48     		ldr	r0, .L19
 160 0022 1F4A     		ldr	r2, .L19+4
 161 0024 0260     		str	r2, [r0]
 172:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 162              		.loc 1 172 3 is_stmt 1 view .LVU30
 172:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 163              		.loc 1 172 24 is_stmt 0 view .LVU31
 164 0026 4722     		movs	r2, #71
 165 0028 4260     		str	r2, [r0, #4]
 173:Core/Src/main.c ****   htim4.Init.Period = 499;
 166              		.loc 1 173 3 is_stmt 1 view .LVU32
 173:Core/Src/main.c ****   htim4.Init.Period = 499;
 167              		.loc 1 173 26 is_stmt 0 view .LVU33
 168 002a 8360     		str	r3, [r0, #8]
 174:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 169              		.loc 1 174 3 is_stmt 1 view .LVU34
 174:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 170              		.loc 1 174 21 is_stmt 0 view .LVU35
 171 002c 40F2F312 		movw	r2, #499
 172 0030 C260     		str	r2, [r0, #12]
 175:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 173              		.loc 1 175 3 is_stmt 1 view .LVU36
 175:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 174              		.loc 1 175 28 is_stmt 0 view .LVU37
 175 0032 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccLRNwCz.s 			page 11


 176:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 176              		.loc 1 176 3 is_stmt 1 view .LVU38
 176:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 177              		.loc 1 176 32 is_stmt 0 view .LVU39
 178 0034 8023     		movs	r3, #128
 179 0036 8361     		str	r3, [r0, #24]
 177:Core/Src/main.c ****   {
 180              		.loc 1 177 3 is_stmt 1 view .LVU40
 177:Core/Src/main.c ****   {
 181              		.loc 1 177 7 is_stmt 0 view .LVU41
 182 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 183              	.LVL0:
 177:Core/Src/main.c ****   {
 184              		.loc 1 177 6 view .LVU42
 185 003c 20BB     		cbnz	r0, .L14
 181:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 186              		.loc 1 181 3 is_stmt 1 view .LVU43
 181:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 187              		.loc 1 181 34 is_stmt 0 view .LVU44
 188 003e 4FF48053 		mov	r3, #4096
 189 0042 0A93     		str	r3, [sp, #40]
 182:Core/Src/main.c ****   {
 190              		.loc 1 182 3 is_stmt 1 view .LVU45
 182:Core/Src/main.c ****   {
 191              		.loc 1 182 7 is_stmt 0 view .LVU46
 192 0044 0AA9     		add	r1, sp, #40
 193 0046 1548     		ldr	r0, .L19
 194 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 195              	.LVL1:
 182:Core/Src/main.c ****   {
 196              		.loc 1 182 6 view .LVU47
 197 004c F0B9     		cbnz	r0, .L15
 186:Core/Src/main.c ****   {
 198              		.loc 1 186 3 is_stmt 1 view .LVU48
 186:Core/Src/main.c ****   {
 199              		.loc 1 186 7 is_stmt 0 view .LVU49
 200 004e 1348     		ldr	r0, .L19
 201 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 202              	.LVL2:
 186:Core/Src/main.c ****   {
 203              		.loc 1 186 6 view .LVU50
 204 0054 E0B9     		cbnz	r0, .L16
 190:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 205              		.loc 1 190 3 is_stmt 1 view .LVU51
 190:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 206              		.loc 1 190 37 is_stmt 0 view .LVU52
 207 0056 0023     		movs	r3, #0
 208 0058 0893     		str	r3, [sp, #32]
 191:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 209              		.loc 1 191 3 is_stmt 1 view .LVU53
 191:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 210              		.loc 1 191 33 is_stmt 0 view .LVU54
 211 005a 0993     		str	r3, [sp, #36]
 192:Core/Src/main.c ****   {
 212              		.loc 1 192 3 is_stmt 1 view .LVU55
 192:Core/Src/main.c ****   {
 213              		.loc 1 192 7 is_stmt 0 view .LVU56
ARM GAS  /tmp/ccLRNwCz.s 			page 12


 214 005c 08A9     		add	r1, sp, #32
 215 005e 0F48     		ldr	r0, .L19
 216 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 217              	.LVL3:
 192:Core/Src/main.c ****   {
 218              		.loc 1 192 6 view .LVU57
 219 0064 B0B9     		cbnz	r0, .L17
 196:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 220              		.loc 1 196 3 is_stmt 1 view .LVU58
 196:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 221              		.loc 1 196 20 is_stmt 0 view .LVU59
 222 0066 6023     		movs	r3, #96
 223 0068 0193     		str	r3, [sp, #4]
 197:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 224              		.loc 1 197 3 is_stmt 1 view .LVU60
 197:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 225              		.loc 1 197 19 is_stmt 0 view .LVU61
 226 006a 0022     		movs	r2, #0
 227 006c 0292     		str	r2, [sp, #8]
 198:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 228              		.loc 1 198 3 is_stmt 1 view .LVU62
 198:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 229              		.loc 1 198 24 is_stmt 0 view .LVU63
 230 006e 0392     		str	r2, [sp, #12]
 199:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 231              		.loc 1 199 3 is_stmt 1 view .LVU64
 199:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 232              		.loc 1 199 24 is_stmt 0 view .LVU65
 233 0070 0592     		str	r2, [sp, #20]
 200:Core/Src/main.c ****   {
 234              		.loc 1 200 3 is_stmt 1 view .LVU66
 200:Core/Src/main.c ****   {
 235              		.loc 1 200 7 is_stmt 0 view .LVU67
 236 0072 01A9     		add	r1, sp, #4
 237 0074 0948     		ldr	r0, .L19
 238 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 239              	.LVL4:
 200:Core/Src/main.c ****   {
 240              		.loc 1 200 6 view .LVU68
 241 007a 68B9     		cbnz	r0, .L18
 207:Core/Src/main.c **** 
 242              		.loc 1 207 3 is_stmt 1 view .LVU69
 243 007c 0748     		ldr	r0, .L19
 244 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 245              	.LVL5:
 209:Core/Src/main.c **** 
 246              		.loc 1 209 1 is_stmt 0 view .LVU70
 247 0082 0FB0     		add	sp, sp, #60
 248              	.LCFI4:
 249              		.cfi_remember_state
 250              		.cfi_def_cfa_offset 4
 251              		@ sp needed
 252 0084 5DF804FB 		ldr	pc, [sp], #4
 253              	.L14:
 254              	.LCFI5:
 255              		.cfi_restore_state
 179:Core/Src/main.c ****   }
ARM GAS  /tmp/ccLRNwCz.s 			page 13


 256              		.loc 1 179 5 is_stmt 1 view .LVU71
 257 0088 FFF7FEFF 		bl	Error_Handler
 258              	.LVL6:
 259              	.L15:
 184:Core/Src/main.c ****   }
 260              		.loc 1 184 5 view .LVU72
 261 008c FFF7FEFF 		bl	Error_Handler
 262              	.LVL7:
 263              	.L16:
 188:Core/Src/main.c ****   }
 264              		.loc 1 188 5 view .LVU73
 265 0090 FFF7FEFF 		bl	Error_Handler
 266              	.LVL8:
 267              	.L17:
 194:Core/Src/main.c ****   }
 268              		.loc 1 194 5 view .LVU74
 269 0094 FFF7FEFF 		bl	Error_Handler
 270              	.LVL9:
 271              	.L18:
 202:Core/Src/main.c ****   }
 272              		.loc 1 202 5 view .LVU75
 273 0098 FFF7FEFF 		bl	Error_Handler
 274              	.LVL10:
 275              	.L20:
 276              		.align	2
 277              	.L19:
 278 009c 00000000 		.word	htim4
 279 00a0 00080040 		.word	1073743872
 280              		.cfi_endproc
 281              	.LFE67:
 283              		.section	.text.SystemClock_Config,"ax",%progbits
 284              		.align	1
 285              		.global	SystemClock_Config
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu softvfp
 291              	SystemClock_Config:
 292              	.LFB66:
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 293              		.loc 1 118 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 64
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 00B5     		push	{lr}
 298              	.LCFI6:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 14, -4
 301 0002 91B0     		sub	sp, sp, #68
 302              	.LCFI7:
 303              		.cfi_def_cfa_offset 72
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 304              		.loc 1 119 3 view .LVU77
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 305              		.loc 1 119 22 is_stmt 0 view .LVU78
 306 0004 0023     		movs	r3, #0
 307 0006 0993     		str	r3, [sp, #36]
ARM GAS  /tmp/ccLRNwCz.s 			page 14


 308 0008 0B93     		str	r3, [sp, #44]
 309 000a 0C93     		str	r3, [sp, #48]
 120:Core/Src/main.c **** 
 310              		.loc 1 120 3 is_stmt 1 view .LVU79
 120:Core/Src/main.c **** 
 311              		.loc 1 120 22 is_stmt 0 view .LVU80
 312 000c 0193     		str	r3, [sp, #4]
 313 000e 0293     		str	r3, [sp, #8]
 314 0010 0393     		str	r3, [sp, #12]
 315 0012 0493     		str	r3, [sp, #16]
 316 0014 0593     		str	r3, [sp, #20]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 317              		.loc 1 125 3 is_stmt 1 view .LVU81
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 318              		.loc 1 125 36 is_stmt 0 view .LVU82
 319 0016 0121     		movs	r1, #1
 320 0018 0691     		str	r1, [sp, #24]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 321              		.loc 1 126 3 is_stmt 1 view .LVU83
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 322              		.loc 1 126 30 is_stmt 0 view .LVU84
 323 001a 4FF48032 		mov	r2, #65536
 324 001e 0792     		str	r2, [sp, #28]
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 325              		.loc 1 127 3 is_stmt 1 view .LVU85
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 326              		.loc 1 127 36 is_stmt 0 view .LVU86
 327 0020 0893     		str	r3, [sp, #32]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 328              		.loc 1 128 3 is_stmt 1 view .LVU87
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 329              		.loc 1 128 30 is_stmt 0 view .LVU88
 330 0022 0A91     		str	r1, [sp, #40]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 331              		.loc 1 129 3 is_stmt 1 view .LVU89
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 332              		.loc 1 129 34 is_stmt 0 view .LVU90
 333 0024 0223     		movs	r3, #2
 334 0026 0D93     		str	r3, [sp, #52]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 335              		.loc 1 130 3 is_stmt 1 view .LVU91
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 336              		.loc 1 130 35 is_stmt 0 view .LVU92
 337 0028 0E92     		str	r2, [sp, #56]
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 338              		.loc 1 131 3 is_stmt 1 view .LVU93
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 339              		.loc 1 131 32 is_stmt 0 view .LVU94
 340 002a 4FF4E013 		mov	r3, #1835008
 341 002e 0F93     		str	r3, [sp, #60]
 132:Core/Src/main.c ****   {
 342              		.loc 1 132 3 is_stmt 1 view .LVU95
 132:Core/Src/main.c ****   {
 343              		.loc 1 132 7 is_stmt 0 view .LVU96
 344 0030 06A8     		add	r0, sp, #24
 345 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 346              	.LVL11:
ARM GAS  /tmp/ccLRNwCz.s 			page 15


 132:Core/Src/main.c ****   {
 347              		.loc 1 132 6 view .LVU97
 348 0036 80B9     		cbnz	r0, .L25
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 349              		.loc 1 139 3 is_stmt 1 view .LVU98
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 350              		.loc 1 139 31 is_stmt 0 view .LVU99
 351 0038 0F23     		movs	r3, #15
 352 003a 0193     		str	r3, [sp, #4]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 353              		.loc 1 141 3 is_stmt 1 view .LVU100
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 354              		.loc 1 141 34 is_stmt 0 view .LVU101
 355 003c 0221     		movs	r1, #2
 356 003e 0291     		str	r1, [sp, #8]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 357              		.loc 1 142 3 is_stmt 1 view .LVU102
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 358              		.loc 1 142 35 is_stmt 0 view .LVU103
 359 0040 0023     		movs	r3, #0
 360 0042 0393     		str	r3, [sp, #12]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 361              		.loc 1 143 3 is_stmt 1 view .LVU104
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 362              		.loc 1 143 36 is_stmt 0 view .LVU105
 363 0044 4FF48062 		mov	r2, #1024
 364 0048 0492     		str	r2, [sp, #16]
 144:Core/Src/main.c **** 
 365              		.loc 1 144 3 is_stmt 1 view .LVU106
 144:Core/Src/main.c **** 
 366              		.loc 1 144 36 is_stmt 0 view .LVU107
 367 004a 0593     		str	r3, [sp, #20]
 146:Core/Src/main.c ****   {
 368              		.loc 1 146 3 is_stmt 1 view .LVU108
 146:Core/Src/main.c ****   {
 369              		.loc 1 146 7 is_stmt 0 view .LVU109
 370 004c 01A8     		add	r0, sp, #4
 371 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 372              	.LVL12:
 146:Core/Src/main.c ****   {
 373              		.loc 1 146 6 view .LVU110
 374 0052 20B9     		cbnz	r0, .L26
 150:Core/Src/main.c **** 
 375              		.loc 1 150 1 view .LVU111
 376 0054 11B0     		add	sp, sp, #68
 377              	.LCFI8:
 378              		.cfi_remember_state
 379              		.cfi_def_cfa_offset 4
 380              		@ sp needed
 381 0056 5DF804FB 		ldr	pc, [sp], #4
 382              	.L25:
 383              	.LCFI9:
 384              		.cfi_restore_state
 134:Core/Src/main.c ****   }
 385              		.loc 1 134 5 is_stmt 1 view .LVU112
 386 005a FFF7FEFF 		bl	Error_Handler
 387              	.LVL13:
ARM GAS  /tmp/ccLRNwCz.s 			page 16


 388              	.L26:
 148:Core/Src/main.c ****   }
 389              		.loc 1 148 5 view .LVU113
 390 005e FFF7FEFF 		bl	Error_Handler
 391              	.LVL14:
 392              		.cfi_endproc
 393              	.LFE66:
 395              		.section	.text.main,"ax",%progbits
 396              		.align	1
 397              		.global	main
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu softvfp
 403              	main:
 404              	.LFB65:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 405              		.loc 1 66 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 0000 10B5     		push	{r4, lr}
 410              	.LCFI10:
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 4, -8
 413              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 414              		.loc 1 74 3 view .LVU115
 415 0002 FFF7FEFF 		bl	HAL_Init
 416              	.LVL15:
  81:Core/Src/main.c **** 
 417              		.loc 1 81 3 view .LVU116
 418 0006 FFF7FEFF 		bl	SystemClock_Config
 419              	.LVL16:
  88:Core/Src/main.c ****   MX_TIM4_Init();
 420              		.loc 1 88 3 view .LVU117
 421 000a FFF7FEFF 		bl	MX_GPIO_Init
 422              	.LVL17:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 423              		.loc 1 89 3 view .LVU118
 424 000e FFF7FEFF 		bl	MX_TIM4_Init
 425              	.LVL18:
  91:Core/Src/main.c ****   /* USER CODE END 2 */
 426              		.loc 1 91 3 view .LVU119
 427 0012 0021     		movs	r1, #0
 428 0014 0D48     		ldr	r0, .L34
 429 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 430              	.LVL19:
 431 001a 15E0     		b	.L32
 432              	.LVL20:
 433              	.L29:
 434              	.LBB8:
 100:Core/Src/main.c ****       HAL_Delay(1);
 435              		.loc 1 100 7 discriminator 3 view .LVU120
 436 001c 0B4B     		ldr	r3, .L34
 437 001e 1B68     		ldr	r3, [r3]
 438 0020 5C63     		str	r4, [r3, #52]
ARM GAS  /tmp/ccLRNwCz.s 			page 17


 101:Core/Src/main.c ****     }
 439              		.loc 1 101 7 discriminator 3 view .LVU121
 440 0022 0120     		movs	r0, #1
 441 0024 FFF7FEFF 		bl	HAL_Delay
 442              	.LVL21:
  99:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 443              		.loc 1 99 30 discriminator 3 view .LVU122
 444 0028 0134     		adds	r4, r4, #1
 445              	.LVL22:
 446              	.L28:
  99:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 447              		.loc 1 99 21 discriminator 1 view .LVU123
  99:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 448              		.loc 1 99 5 is_stmt 0 discriminator 1 view .LVU124
 449 002a B4F5FA7F 		cmp	r4, #500
 450 002e F5DB     		blt	.L29
 451              	.LBE8:
 452              	.LBB9:
 104:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 453              		.loc 1 104 14 view .LVU125
 454 0030 4FF4FA74 		mov	r4, #500
 455              	.LVL23:
 104:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 456              		.loc 1 104 14 view .LVU126
 457 0034 06E0     		b	.L30
 458              	.LVL24:
 459              	.L31:
 105:Core/Src/main.c ****       HAL_Delay(200);
 460              		.loc 1 105 7 is_stmt 1 discriminator 3 view .LVU127
 461 0036 054B     		ldr	r3, .L34
 462 0038 1B68     		ldr	r3, [r3]
 463 003a 5C63     		str	r4, [r3, #52]
 106:Core/Src/main.c ****     }
 464              		.loc 1 106 7 discriminator 3 view .LVU128
 465 003c C820     		movs	r0, #200
 466 003e FFF7FEFF 		bl	HAL_Delay
 467              	.LVL25:
 104:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 468              		.loc 1 104 31 discriminator 3 view .LVU129
 104:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 469              		.loc 1 104 33 is_stmt 0 discriminator 3 view .LVU130
 470 0042 643C     		subs	r4, r4, #100
 471              	.LVL26:
 472              	.L30:
 104:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 473              		.loc 1 104 23 is_stmt 1 discriminator 1 view .LVU131
 104:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 474              		.loc 1 104 5 is_stmt 0 discriminator 1 view .LVU132
 475 0044 002C     		cmp	r4, #0
 476 0046 F6DA     		bge	.L31
 477              	.LVL27:
 478              	.L32:
 104:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 479              		.loc 1 104 5 discriminator 1 view .LVU133
 480              	.LBE9:
  96:Core/Src/main.c ****   {
 481              		.loc 1 96 3 is_stmt 1 view .LVU134
ARM GAS  /tmp/ccLRNwCz.s 			page 18


  99:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 482              		.loc 1 99 5 view .LVU135
 483              	.LBB10:
  99:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 484              		.loc 1 99 10 view .LVU136
  99:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 485              		.loc 1 99 14 is_stmt 0 view .LVU137
 486 0048 0024     		movs	r4, #0
  99:Core/Src/main.c ****       __HAL_TIM_SetCompare(&htim4, TIM_CHANNEL_1, i);
 487              		.loc 1 99 5 view .LVU138
 488 004a EEE7     		b	.L28
 489              	.L35:
 490              		.align	2
 491              	.L34:
 492 004c 00000000 		.word	htim4
 493              	.LBE10:
 494              		.cfi_endproc
 495              	.LFE65:
 497              		.comm	htim4,72,4
 498              		.text
 499              	.Letext0:
 500              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 501              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 502              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 503              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 504              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 505              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 506              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 507              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 508              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 509              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 510              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 511              		.file 14 "Core/Inc/main.h"
ARM GAS  /tmp/ccLRNwCz.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLRNwCz.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccLRNwCz.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccLRNwCz.s:74     .text.MX_GPIO_Init:000000000000002c $d
     /tmp/ccLRNwCz.s:79     .text.Error_Handler:0000000000000000 $t
     /tmp/ccLRNwCz.s:86     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLRNwCz.s:118    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccLRNwCz.s:124    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccLRNwCz.s:278    .text.MX_TIM4_Init:000000000000009c $d
                            *COM*:0000000000000048 htim4
     /tmp/ccLRNwCz.s:284    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLRNwCz.s:291    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLRNwCz.s:396    .text.main:0000000000000000 $t
     /tmp/ccLRNwCz.s:403    .text.main:0000000000000000 main
     /tmp/ccLRNwCz.s:492    .text.main:000000000000004c $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
HAL_Delay
